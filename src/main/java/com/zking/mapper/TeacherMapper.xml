<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.mapper.TeacherMapper" >
  <resultMap id="BaseResultMap" type="com.zking.model.Teacher" >
    <constructor >
      <idArg column="teacher_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="teacher_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="teacher_sex" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="teacher_address" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="teacher_tel" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>

  <resultMap id="row" type="com.zking.model.Teacher">
    <id column="teacher_id" property="teacherId" javaType="java.lang.Integer"></id>
    <result column="teacher_name" property="teacherName" javaType="java.lang.String"></result>
    <result column="teacher_sex" property="teacherSex" javaType="java.lang.String"></result>
    <result column="teacher_address" property="teacherAddress" javaType="java.lang.String"></result>
    <result column="teacher_tel" property="teacherTel" javaType="java.lang.String"></result>
  <collection property="listClass" ofType="com.zking.model.Class">
    <id column="class_id" property="classId" javaType="java.lang.Integer"></id>
    <result column="class_name" property="className" javaType="java.lang.String"/>
  </collection>
    <collection property="sysUser" ofType="com.zking.model.SysUser">
      <id column="userid" property="userid" javaType="java.lang.Integer"/>
      <result column="username" property="username" javaType="java.lang.String"/>
      <result column="password" property="password" javaType="java.lang.String"/>
    </collection>
  </resultMap>



  <sql id="Base_Column_List" >
    teacher_id, teacher_name, user_id, teacher_sex, teacher_address, teacher_tel
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_teacher
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </select>

  <!--一对多查询-->
  <select id="finAll" resultMap="row">
 select t.teacher_id,teacher_name,c.class_id,c.class_name from t_teacher t
		left outer join t_teacher_class tc
        on t.teacher_id=tc.teacher_id
        left outer join t_class c on
        tc.class_id=c.class_id  where t.teacher_id=#{teacherId}
  </select>
  <select id="listckteacher" resultMap="row">
    select <include refid="Base_Column_List"/>
    from t_teacher where 1=1
    <if test="teacherName != null">
      and teacher_name like CONCAT(CONCAT('%',#{teacherName},'%'))
    </if>
  </select>
  <select id="listckNamePaw" resultMap="row">
select tt.teacher_name,tsu.`PASSWORD` from
t_teacher tt,t_sys_user tsu where
 tt.user_id=tsu.userid

  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_teacher
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </delete>
  <delete id="delTeacher">
     delete from t_teacher where teacher_id=#{teacherId}
  </delete>
  <insert id="insert" parameterType="com.zking.model.Teacher" >
    insert into t_teacher (teacher_id, teacher_name, user_id, 
      teacher_sex, teacher_address, teacher_tel
      )
    values (#{teacherId,jdbcType=INTEGER}, #{teacherName,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{teacherSex,jdbcType=CHAR}, #{teacherAddress,jdbcType=VARCHAR}, #{teacherTel,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zking.model.Teacher" >
    insert into t_teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="teacherName != null" >
        teacher_name,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="teacherSex != null" >
        teacher_sex,
      </if>
      <if test="teacherAddress != null" >
        teacher_address,
      </if>
      <if test="teacherTel != null" >
        teacher_tel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null" >
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="teacherSex != null" >
        #{teacherSex,jdbcType=CHAR},
      </if>
      <if test="teacherAddress != null" >
        #{teacherAddress,jdbcType=VARCHAR},
      </if>
      <if test="teacherTel != null" >
        #{teacherTel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="insertTeacher">
insert into t_teacher(teacher_name,teacher_sex,teacher_address,teacher_tel)
VALUES(#{teacherName},#{teacherSex},#{teacherAddress},#{teacherTel})

  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zking.model.Teacher" >
    update t_teacher
    <set >
      <if test="teacherName != null" >
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="teacherSex != null" >
        teacher_sex = #{teacherSex,jdbcType=CHAR},
      </if>
      <if test="teacherAddress != null" >
        teacher_address = #{teacherAddress,jdbcType=VARCHAR},
      </if>
      <if test="teacherTel != null" >
        teacher_tel = #{teacherTel,jdbcType=VARCHAR},
      </if>
    </set>
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.model.Teacher" >
    update t_teacher
    set teacher_name = #{teacherName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      teacher_sex = #{teacherSex,jdbcType=CHAR},
      teacher_address = #{teacherAddress,jdbcType=VARCHAR},
      teacher_tel = #{teacherTel,jdbcType=VARCHAR}
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </update>
  <update id="updateTeacher">
     update t_teacher set
     teacher_name=#{teacherName}, teacher_sex=#{teacherSex},teacher_address=#{teacherAddress},teacher_tel=#{teacherTel}
      where teacher_id=#{teacherId}

  </update>
</mapper>